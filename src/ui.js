// Generated by CoffeeScript 1.10.0
(function() {
  define(function(require, exports, module) {
    'use strict';
    var ExtensionUtils, PanelManager, PreferencesDialog, ProjectManager, core, init, initStylesheet, insertRows, showPanel, templatePanel, templateRow;
    ProjectManager = brackets.getModule('project/ProjectManager');
    PanelManager = brackets.getModule('view/PanelManager');
    ExtensionUtils = brackets.getModule('utils/ExtensionUtils');
    templatePanel = require('text!templates/panel.html');
    templateRow = require('text!templates/rows.html');
    core = require('./core');
    PreferencesDialog = require('./preferencesdialog');
    this.bracketsBottomPanel;
    this.$utfBottomPanel;
    insertRows = (function(_this) {
      return function(files) {
        var rowsHtml;
        rowsHtml = Mustache.render(templateRow, {
          'fileList': files
        });
        return _this.$utfBottomPanel.find('.rows-container').empty().append(rowsHtml);
      };
    })(this);
    init = function() {
      var panelHtml;
      panelHtml = Mustache.render(templatePanel, '');
      this.bracketsBottomPanel = PanelManager.createBottomPanel('brutf.encoding.listfiles', $(panelHtml), 200);
      this.$utfBottomPanel = $('#brackets-utf8-converter-panel');
      this.$utfBottomPanel.on('click', '.close', (function(_this) {
        return function() {
          _this.bracketsBottomPanel.hide();
        };
      })(this)).on('click', '.btnConvert', core.convertFile).on('click', '.preferences-settings', function() {
        return PreferencesDialog.show();
      });
      $(ProjectManager).on("beforeProjectClose", (function(_this) {
        return function() {
          return _this.bracketsBottomPanel.hide();
        };
      })(this));
    };
    initStylesheet = function(cssname) {
      return ExtensionUtils.loadStyleSheet(module, "../" + cssname);
    };
    showPanel = (function(_this) {
      return function(files) {
        _this.bracketsBottomPanel.show();
        return insertRows(files);
      };
    })(this);
    exports.init = init;
    exports.initStylesheet = initStylesheet;
    exports.showPanel = showPanel;
  });

}).call(this);
